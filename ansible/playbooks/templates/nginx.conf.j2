events {
    use                 epoll;
    worker_connections  128;
}

http {

# sftp service endpoint
    server {
        listen              {{ nginx_sftp_public_port }};

        location / {
            {# auth_basic      "Restricted";
            auth_basic_user_file  /etc/nginx/.htpasswd; #}
            proxy_pass      http://127.0.0.1:{{ sftp_port }};

            # Support for WebSocket connections
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            # Forward essential headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
        }
    }

# postgres service endpoint
    server {
        listen              {{ nginx_postgres_public_port }};

        location / {
            {# auth_basic      "Restricted";
            auth_basic_user_file  /etc/nginx/.htpasswd; #}
            proxy_pass      http://127.0.0.1:{{ postgres_port }};
            
        }
    }

# Airbyte service endpoint
    server {
        listen              {{ nginx_airbyte_public_port }};

        location / {
            proxy_pass      http://127.0.0.1:{{ airbyte_port }};

            # Support for WebSocket connections
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            # Forward essential headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
                
        }
    }

# Minio-Console service endpoint
    server {
        listen              {{ nginx_minio_console_public_port }};

        location / {
            proxy_pass      http://127.0.0.1:{{ minio_console_port }};

            # Support for WebSocket connections
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            # Forward essential headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Increase buffer size for large headers
            client_max_body_size 50M;         # Adjust depending on the expected size of incoming data
            proxy_buffer_size 16k;
            proxy_buffers 4 32k;
            proxy_busy_buffers_size 64k;
            proxy_temp_file_write_size 64k;

            # Enable keep-alive for client connections
            keepalive_timeout 65;

            # Enable keep-alive for backend connections
            proxy_set_header Connection "";

            
        }
    }

# Minio-API service endpoint
    server {
        listen              {{ nginx_minio_api_public_port }};

        location / {
            proxy_pass      http://127.0.0.1:{{ minio_api_port }};

            # Support for WebSocket connections
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            # Forward essential headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Increase buffer size for large headers
            client_max_body_size 50M;         # Adjust depending on the expected size of incoming data
            proxy_buffer_size 16k;
            proxy_buffers 4 32k;
            proxy_busy_buffers_size 64k;
            proxy_temp_file_write_size 64k;

            # Enable keep-alive for client connections
            keepalive_timeout 65;

            # Enable keep-alive for backend connections
            proxy_set_header Connection "";
            
        }
    }

# query service endpoint
    server {
        listen              {{ nginx_query_svc_public_port }};

        location / {
            auth_basic      "Restricted";
            auth_basic_user_file  /etc/nginx/.htpasswd;
            proxy_pass      http://127.0.0.1:{{ duckdb_svc_container_port }};

            # Timeout settings
            proxy_read_timeout 300;
            proxy_connect_timeout 300;
            proxy_send_timeout 300;

            # Enhanced proxy settings
            proxy_buffering off;  # Disable buffering for real-time responses
            proxy_buffers 8 16k;  # Adjust buffer size if necessary
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;  # Use HTTP/1.1 for WebSocket support

            # Increase buffer size for large headers
            client_max_body_size 50M;         # Adjust depending on the expected size of incoming data
            proxy_buffer_size 16k;
            proxy_busy_buffers_size 64k;
            proxy_temp_file_write_size 64k;

            # Enable keep-alive for client connections
            keepalive_timeout 65;

            # Enable keep-alive for backend connections
            proxy_set_header Connection "";
            
        }
    }

# Node-exporter service endpoint
    server {
        listen              {{ nginx_node_exporter_public_port }};

        location / {
            auth_basic      "Restricted";
            auth_basic_user_file  /etc/nginx/.htpasswd;
            proxy_pass      http://127.0.0.1:{{ node_exporter_local_port }};
            
        }
    }

# promtail service endpoint
    server {
        listen              {{ nginx_promtail_public_port }};

        location / {
            auth_basic      "Restricted";
            auth_basic_user_file  /etc/nginx/.htpasswd;
            proxy_pass      http://127.0.0.1:{{ promrtail_http_listen_port }};
            
        }
    }

{# # prometheus service endpoint
    server {
        listen              {{ nginx_prometheus_public_port }};

        location / {
            auth_basic      "Restricted";
            auth_basic_user_file  /etc/nginx/.htpasswd;
            proxy_pass      http://127.0.0.1:{{ node_exporter_local_port }};
            
        }
    } #}


}
